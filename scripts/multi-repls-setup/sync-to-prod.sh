#!/bin/bash
# Script pour synchroniser le code de l'environnement de test vers production

echo "=== Pr√©paration pour la synchronisation vers production ==="

# V√©rifier si Git est initialis√©
if [ ! -d .git ]; then
  echo "‚ùå Erreur: D√©p√¥t Git non initialis√©"
  echo "   Ex√©cutez les commandes suivantes pour configurer Git:"
  echo "   git init"
  echo "   git remote add origin https://github.com/VOTRE_USERNAME/kora-app.git"
  exit 1
fi

# V√©rifier s'il y a des modifications non committ√©es
if [ -n "$(git status --porcelain)" ]; then
  echo "‚ö†Ô∏è Vous avez des changements non committ√©s"
  echo "   Veuillez les committer ou les stasher avant de continuer"
  exit 1
fi

# Demander la version √† tagger
read -p "Version √† d√©ployer en production (ex: v1.0.0): " version
if [ -z "$version" ]; then
  echo "‚ùå Erreur: Version non sp√©cifi√©e"
  exit 1
fi

# Valider le format de la version (optionnel)
if ! [[ $version =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.]+)?$ ]]; then
  echo "‚ö†Ô∏è Format de version non standard (devrait √™tre comme v1.0.0)"
  read -p "Continuer quand m√™me? (o/n): " confirm
  if [[ $confirm != "o" && $confirm != "O" ]]; then
    echo "‚ùå Op√©ration annul√©e"
    exit 1
  fi
fi

# Cr√©er un tag pour cette version
echo "üîÑ Cr√©ation d'un tag pour la version $version..."
git tag -a "$version" -m "Version $version pr√™te pour la production"

# Pousser le tag vers GitHub
echo "üîÑ Envoi du tag vers le d√©p√¥t distant..."
git push origin "$version"

echo ""
echo "‚úÖ Version $version pr√™te pour la production!"
echo ""
echo "√âTAPES SUIVANTES:"
echo "1. Allez dans votre Repl de production"
echo "2. Ex√©cutez: ./scripts/multi-repls-setup/pull-from-test.sh $version"
echo "3. Apr√®s, cliquez sur le bouton 'Deploy' dans Replit"
echo ""