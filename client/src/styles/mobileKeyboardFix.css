/* 
 * Styles pour corriger l'affichage sur mobile avec clavier virtuel
 * Le problème : quand le clavier virtuel est ouvert, toute l'interface passe en arrière-plan
 * Solution : garantir que le header reste visible et que la zone de saisie reste au-dessus du clavier
 */

/* Variables pour la gestion des hauteurs */
:root {
  --keyboard-height: 0px; /* Sera mis à jour dynamiquement via JS */
  --header-height: 56px;
  --composer-height: 60px;
  --viewport-height-diff: 0px; /* Différence de hauteur quand le clavier est ouvert */
  --safe-area-top: env(safe-area-inset-top, 0px);
  --safe-area-bottom: env(safe-area-inset-bottom, 0px);
}

/* Force l'utilisation de l'API Visual Viewport pour un meilleur comportement */
.visual-viewport-supported .composer-container {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 9990; /* Valeur élevée pour être au-dessus du contenu */
  transition: transform 0.1s ease; /* Transition douce pour le repositionnement */
}

/* Conteneur de messages - zone scrollable */
.messages-container {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  padding-bottom: var(--composer-height); /* Espace pour la zone de saisie */
  -webkit-overflow-scrolling: touch; /* Défilement fluide sur iOS */
  position: relative;
}

/* S'assurer que la zone de message n'est pas masquée par le clavier */
body.keyboard-open .messages-container {
  max-height: calc(var(--app-height) - var(--header-height));
  height: calc(var(--app-height) - var(--header-height));
  overflow-y: auto;
  padding-bottom: var(--composer-height); /* Espace pour le composer */
}

/* Garantir que le header reste visible lors de l'ouverture du clavier */
body.keyboard-open #kora-header-container {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 10000 !important;
  transform: none !important;
}

/* Repositionner la zone de saisie quand le clavier est visible - Android */
.android-device.keyboard-open .composer-container {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 9990;
  transform: translateY(calc(var(--keyboard-height) * -1));
}

/* Repositionner la zone de saisie quand le clavier est visible - iOS */
.ios-device.keyboard-open .composer-container {
  position: fixed !important;
  bottom: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: 9990 !important;
  transform: translateY(calc(var(--keyboard-height) * -1)) !important;
}

/* Optimisations pour le Visual Viewport API (iOS principalement) */
.visual-viewport-active .composer-container {
  position: fixed;
  transform: translateY(calc(var(--viewport-height-diff) * -1));
  bottom: 0;
  width: 100%;
  z-index: 9990;
}

/* Styles spécifiques quand le clavier est ouvert */
body.keyboard-open {
  /* Éviter le rebond/défilement de la page entière */
  position: relative;
  width: 100%;
  height: var(--app-height);
  overflow: hidden;
}

/* Styles pour l'interface principale */
.flex-1.overflow-y-auto.p-4.chat-messages-container.messages-container {
  padding-bottom: calc(var(--composer-height) + 20px);
}

/* Ajustements pour les conteneurs principaux */
body.keyboard-open .flex-1.overflow-hidden.flex.flex-col {
  height: var(--app-height) !important;
  max-height: var(--app-height) !important;
  overflow: hidden !important;
}

/* Quand le clavier est ouvert, masquer tous les éléments non essentiels */
body.keyboard-open .messages-container {
  position: absolute;
  top: var(--header-height);
  left: 0;
  right: 0;
  bottom: var(--composer-height);
}

/* Ajustements spécifiques pour les petits écrans (téléphones) */
@media (max-width: 640px) {
  /* Réduire la hauteur de la zone de saisie */
  .composer-container {
    padding: 8px;
  }
  
  /* Optimiser l'espace vertical */
  .chat-textarea {
    padding-top: 8px !important;
    padding-bottom: 8px !important;
    max-height: 100px !important;
  }
  
  /* Améliorer le comportement du header sur mobile */
  #kora-header-container {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    z-index: 10000 !important;
  }
  
  /* S'assurer que la zone de saisie reste visible */
  .composer-container {
    position: fixed !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    background-color: var(--background, #ffffff) !important;
    z-index: 9990 !important;
  }
  
  /* Assurer l'espace entre les messages et la zone de saisie */
  .messages-container {
    padding-bottom: 70px;
  }
}

/* Support pour les navigateurs spécifiques */
.chrome-browser.android-device.keyboard-open .composer-container {
  transform: translateY(calc(var(--keyboard-height) * -1)) !important;
}

.samsung-browser.android-device.keyboard-open .composer-container {
  bottom: var(--keyboard-height) !important;
  transform: none !important;
}

/* Support pour les navigateurs iOS */
.safari-browser.ios-device.keyboard-open .composer-container {
  transform: translateY(calc(var(--keyboard-height) * -1)) !important;
}

/* Support spécifique pour les appareils iOS avec notch */
.ios-notch.keyboard-open #kora-header-container {
  padding-top: var(--safe-area-top) !important;
}

/* Assurer que lorsque le clavier est fermé, tout revient à la normale */
body:not(.keyboard-open) .composer-container {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  transform: none !important;
}

/* Support pour le Visual Viewport API - la meilleure solution quand disponible */
.visual-viewport-supported.visual-viewport-active .composer-container {
  transform: translateY(calc(var(--viewport-height-diff) * -1)) !important;
}

/* Ajustement pour le champ de saisie texte lui-même */
.chat-textarea {
  resize: none !important;
  overflow-y: auto !important;
  min-height: 40px !important;
}